import React from 'react'; 
import './App.css'; 
import Calendar from 'react-calendar';
import 'react-calendar/dist/Calendar.css';

class App extends React.Component { 

  constructor(props){
    super(); 

    let current = JSON.parse(localStorage.getItem('toDoList')) || [];

    this.state = {
      toDoList : current,
      title: '',
      description: '',
      priority: 'normal',
      deadline: new Date(),
      sort: 'c-asc',
      filter: 'all',
      edit: -1
    };

    this.handleChange = this.handleChange.bind(this);
    this.handleAddItem = this.handleAddItem.bind(this);
    this.modifyItem = this.modifyItem.bind(this);
    this.setDeadline = this.setDeadline.bind(this);
    this.setFilter = this.setFilter.bind(this);
  }  


  render () {

    let toDoListDisplay = this.state.toDoList;

    if (this.state.filter !== 'all')
      toDoListDisplay = this.state.toDoList.filter(
           item => item.status === this.state.filter);

    switch(this.state.sort){
      case 'c-desc':
        toDoListDisplay.sort((a,b) => b.creation - a.creation);
      break;
      case 'd-asc':
        toDoListDisplay.sort((a,b) => a.deadline - b.deadline);
      break;
      case 'd-desc':
        toDoListDisplay.sort((a,b) => b.deadline - a.deadline);
      break;
      case 'm-asc':
        toDoListDisplay.sort((a,b) => a.lastModified - b.lastModified);
      break;
      case 'm-desc':
        toDoListDisplay.sort((a,b) => b.lastModified - a.lastModified);
      break;
      case 'c-asc':
      default:
       // do nothing
    };

    let todoListUI = toDoListDisplay.map((item,index) => ( 
       <div key={index}>
        {index}: <input type="text" 
         value={item.title} readOnly /><br />
        <textarea readOnly value={item.description} cols="50" /><br />
        Priority: {item.priority}, Status: {item.status} <br />
        Creation: {new Date(item.creation).toLocaleString()}<br />
        LastMod : {new Date(item.lastModified).toLocaleString()}<br />
        Deadline: {new Date(item.deadline).toLocaleString()}<br />
        <button name="done" value={item.creation}
           onClick={this.modifyItem}>Done</button>&nbsp;
        <button name="delete" value={item.creation}
           onClick={this.modifyItem}>Delete</button>&nbsp;
        <button name="edit" value={item.creation}
           onClick={this.modifyItem}>Edit</button>
       <hr />
       </div>
    ));

    return (

     <div className="App"> <hr />
     Title: &nbsp;
     <input type="text" name="title" placeholder="title" 
       value={this.state.title}
       required onChange={this.handleChange} /><br />
     Description: <br />
      <textarea name="description" placeholder="description" cols="50"
       value={this.state.description}
       onChange={this.handleChange} /><br />
     Priority:
     <input name="priority" type="radio" value="low" 
        checked={this.state.priority === "low"}
        onChange={this.handleChange} />low
     <input name="priority" type="radio" value="normal"
        checked={this.state.priority === "normal"}
        onChange={this.handleChange} />normal
     <input name="priority" type="radio" value="high" 
        checked={this.state.priority === "high"}
        onChange={this.handleChange} />high<br />

     Deadline:<div><Calendar name="deadline" calendarType="US"
       onChange={this.setDeadline} 
       value={this.state.deadline}
       /><br /></div>
     <button name="add" onClick={this.handleAddItem} 
          value={this.state.edit} >Add/Save</button>
     <hr />
     Filter: 
     <input name="filter" type="radio" value="all" 
       checked={this.state.filter === 'all'}
       onChange={this.setFilter} />all
     <input name="filter" type="radio" value="active" 
       checked={this.state.filter === 'active'}
       onChange={this.setFilter} />active
     <input name="filter" type="radio" value="done" 
       checked={this.state.filter === 'done'}
       onChange={this.setFilter}/>done
     <br />
     Sort: <select name="sort" value={this.state.sort} 
         onChange={this.setFilter} >
              <option value="c-asc">creation(asc)</option>
              <option value="c-desc">creation(desc)</option>
              <option value="d-asc">deadline(asc)</option>
              <option value="d-desc">deadline(desc)</option>
              <option value="m-asc">lastModified(asc)</option>
              <option value="m-desc">lastModified(desc)</option>
      </select>
     <hr />
     {todoListUI}
     End
     <hr />
     </div>
    );
  }

  handleChange(e) {

    if (e.target.name === 'title'){
       this.setState({title : e.target.value});
    } else if (e.target.name === 'description'){
       this.setState({description : e.target.value});
    } else if (e.target.name === 'priority'){
       this.setState({priority : e.target.value});
    }

  }

  handleAddItem(e) {

    if (e.target.name !== 'add') return;

    if (this.state.title === '') {
      alert('Title is empty'); return;
    }

    let newList;
    const editItemCreation = parseInt(e.target.value);

    if (editItemCreation < 0) { // new item
      let now = Date.now();
      let newItem = {
        title: this.state.title,
        description: this.state.description,
        creation: now,
        lastModified: now,
        priority: this.state.priority,
        deadline: this.state.deadline.getTime(),
        status: 'active'
      };
      newList = [...this.state.toDoList, newItem];
      this.setState({title: '', description: '', deadline: new Date()});

    } else {

      newList = this.state.toDoList;
      const index = newList.findIndex(
        item => item.creation === editItemCreation);

      if (index >= 0) {
        let item = newList[index];
        item.title = this.state.title;
        item.description = this.state.description;
        item.priority = this.state.priority;
        item.deadline = this.state.deadline.getTime();
        item.lastModified = Date.now();
      }
      this.setState({edit: -1});
    }

    localStorage.setItem('toDoList', JSON.stringify(newList));
    this.setState({toDoList: newList});

  }

  setDeadline(value,event){
    this.setState({deadline: value});
    // console.log(value.getTime());
  }

  modifyItem(e){

    const creation = parseInt(e.target.value); // parseInt()!!

    let newToDoList = this.state.toDoList;
    const index 
      = newToDoList.findIndex(item => item.creation === creation);

    if (index < 0) return;

    if (e.target.name === 'delete'){
      newToDoList.splice(index,1);
    } else if ( (e.target.name === 'done') &&
          (newToDoList[index].status !== 'done')){
      newToDoList[index].status = 'done';
      newToDoList[index].lastModified = Date.now();
    } else if (e.target.name === 'edit'){
      const item = newToDoList[index];
      this.setState({
        title: item.title,
        description: item.description,
        priority: item.priority,
        deadline: new Date(item.deadline),
        edit: item.creation
      });
      return;
    }

    this.setState({toDoList: newToDoList});
    localStorage.setItem('toDoList', JSON.stringify(newToDoList));
       
  }

  setFilter(e){
    if (e.target.name === 'filter') 
       this.setState({filter: e.target.value}); 
    else if (e.target.name === 'sort')
       this.setState({sort: e.target.value}); 
  }

} 

export default App;
